{"version":3,"sources":["components/Background/index.tsx","components/Board/index.tsx","settings/settings.ts","services/ws.service.ts","pages/Game/index.tsx","assets/user.svg","components/Input/index.tsx","components/Spinner/index.tsx","components/Button/index.tsx","services/api.service.ts","services/room.service.ts","pages/Home/index.tsx","pages/JoinRoom/index.tsx","assets/404-not-found.svg","pages/404/index.tsx","router/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","children","className","Board","boardState","onClickSquare","positionValue","row","column","map","boardRow","rowIndex","_value","columIndex","onClick","client","endpoint","WebSocketService","connect","console","log","wsEnpoint","replace","Stomp","Promise","res","rej","disconnect","isConnected","connected","subscribeToTopic","topic","messageCallback","subscribe","unsubscribeToTopic","unsubscribe","sendMessage","message","send","JSON","stringify","Game","locationState","useLocation","state","history","useHistory","useState","setBoardState","game","setGame","undefined","playerTurn","setPlayerTurn","useEffect","code","playerName","action","connectToServer","push","a","handleRoomMessage","handleGameMessage","gameMessage","parse","body","turn","handleBoardUpdate","board","newBoardState","newBoardStateMapped","value","x","y","handlePlay","getPlayerTurnClass","Input","onChange","val","target","placeholder","type","maxLength","minLength","Spinner","Button","disabled","loading","axios","Axios","create","interceptors","request","use","config","baseURL","timeout","headers","api","get","uri","data","params","post","patch","put","delete","RoomService","createRoom","Home","setLoading","setPlayerName","handleButtonClick","roomService","pathname","src","User","alt","inputVal","JoinRoom","useParams","codeNumber","parseInt","PageNotFound","NotFound","Routes","basename","process","exact","path","component","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45d01cfa.chunk.js","sourcesContent":["import { ReactElement } from 'react'\nimport './styles.css';\n\ninterface IBackgroundProps {\n    children?: ReactElement;\n}\n\nexport default function Background({ children }: IBackgroundProps) {\n    return (\n        <div className=\"background-container\">\n            <div className=\"background\" />\n            <h1 className=\"game-name\">Jogo da Velha</h1>\n            <div className=\"container\">\n                {children && children}\n            </div>\n        </div>\n    )\n}\n","import './styles.css';\n\ninterface IBoardProps {\n    boardState?: Array<string[]>;\n    onClickSquare: (row: number, column: number) => void;\n}\n\nexport default function     Board({ boardState, onClickSquare }: IBoardProps) {\n\n    const isPositionChecked = (row: number, column: number) => {\n        return !!boardState && !!boardState[row][column];\n    }\n\n    const positionValue = (row: number, column: number): string => {\n        return !!boardState ? boardState[row][column] : '';\n    }\n\n    return (\n        <div className='board-container'>\n            {\n                boardState?.map((boardRow, rowIndex) =>\n                (\n                    <div key={rowIndex} className=\"board-row\">\n                        {\n                            boardRow.map((_value, columIndex) =>\n                            (<div key={columIndex} onClick={() => onClickSquare(rowIndex, columIndex)} className=\"board-square\">\n                                <p className={positionValue(rowIndex, columIndex)}>{isPositionChecked(rowIndex, columIndex) && positionValue(rowIndex, columIndex)}</p>\n                            </div>)\n                            )\n                        }\n                    </div>\n                )\n                )\n            }\n        </div>\n    );\n}\n","export const env: string = 'development';\nexport const endpoint: string = 'https://ffea6cf4a8ca.ngrok.io/';","import { endpoint } from \"../settings/settings\";\nimport Stomp from 'stompjs';\n\nlet client: Stomp.Client;\n\nconst connect = (): Promise<void> => {\n    console.log('::: WS CONNECTING :::');\n    const wsEnpoint = endpoint.replace('http', 'ws');\n    client = Stomp.client(`${wsEnpoint}/ws`);\n    return new Promise((res, rej) => {\n        client.connect({},\n            () => {\n                console.log('::: WS CONNECTED :::');\n                res();\n            },\n            () => {\n                console.log('::: WS CONNECTION ERROR :::');\n                rej();\n            });\n    })\n}\n\nconst disconnect = (): Promise<void> => {\n    return new Promise((res, rej) => {\n        try {\n            client.disconnect(res);\n        } catch {\n            rej();\n        }\n    })\n}\n\nconst isConnected = (): boolean => {\n    return client.connected;\n}\n\nconst subscribeToTopic = (topic: string, messageCallback: (msg: Stomp.Message) => void): void => {\n    console.log(`::: WS SUBSCRIBE TO TOPIC ${topic} :::`);\n    client.subscribe(topic, messageCallback);\n}\n\nconst unsubscribeToTopic = (topic: string): void => {\n    console.log(`::: WS UNSUBSCRIBE TO TOPIC ${topic} :::`);\n    client.unsubscribe(topic);\n}\n\nconst sendMessage = (topic: string, message: any): void => {\n    console.log(`::: WS SEND MESSAGE ${message} :::`);\n    client.send(topic, {}, JSON.stringify(message));\n}   \n\nconst WebSocketService = {\n    connect,\n    disconnect,\n    isConnected,\n    subscribeToTopic,\n    unsubscribeToTopic,\n    sendMessage\n}\n\nexport default WebSocketService;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Background from \"../../components/Background\";\nimport Board from \"../../components/Board\";\nimport WebSocketService from \"../../services/ws.service\";\nimport './styles.css';\n\ninterface IGame {\n    playerName: string;\n    code: number;\n    action: string;\n}\n\nexport default function Game() {\n\n    const locationState = useLocation().state;\n    const history = useHistory();\n\n    const [boardState, setBoardState] = useState<Array<string[]>>();\n    const [game, setGame] = useState<IGame>();\n    const [playerTurn, setPlayerTurn] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        if (!locationState) {\n            history.push('/');\n            return;\n        }\n\n        const { code, playerName, action } = (locationState as any);\n        setGame({ code, playerName, action });\n        connectToServer(code, playerName, action);\n        return () => {\n            disconnect(code, playerName)\n        }\n    }, [locationState])\n\n    const connectToServer = async (code: number, playerName: string, action: string) => {\n        await WebSocketService.connect();\n        WebSocketService.subscribeToTopic(`/room/${code}`, handleRoomMessage);\n        WebSocketService.subscribeToTopic(`/game/${code}`, handleGameMessage);\n        WebSocketService.sendMessage(`/app/room/${code}`, { action, playerName })\n    }\n\n    const disconnect = async (code: number, playerName: string) => {\n        WebSocketService.sendMessage(`/app/room/${code}`, { action: 'LEAVE', playerName })\n        WebSocketService.disconnect();\n    }\n\n    const handleRoomMessage = (message: any) => {\n        console.log('Room message:', message);\n    }\n\n    const handleGameMessage = (message: any) => {\n        const gameMessage = JSON.parse(message.body);\n        setPlayerTurn(gameMessage.turn);\n        handleBoardUpdate(gameMessage.board);\n    }\n\n    const handleBoardUpdate = (newBoardState: Array<string[]>) => {\n        if (!game) return;\n        const newBoardStateMapped = newBoardState.map((row: string[]) => {\n            return row.map((value) => {\n                if (value === game.playerName) return game.action === 'CREATE' ? 'X' : 'O';\n                else if (value !== '') return game.action === 'CREATE' ? 'O' : 'X'\n                else return '';\n            })\n        })\n        setBoardState(newBoardStateMapped);\n    }\n\n    const handlePlay = (row: number, column: number) => {\n        if (!game) return;\n        WebSocketService.sendMessage(`/app/game/${game.code}`, { action: 'MOVE', playerName: game.playerName, x: row, y: column })\n    }\n\n    const getPlayerTurnClass = () => {\n        if (!game) return;\n        return (playerTurn === game.playerName) ?\n            (game.action === 'CREATE') ? 'player-x' : 'player-o' :\n            (game.action === 'CREATE') ? 'player-o' : 'player-x'\n    }\n\n    return (\n        <Background>\n            <div className=\"game-container\">\n                <Board onClickSquare={(row, column) => handlePlay(row, column)} boardState={boardState} />\n                <div className=\"game-info\">\n                    <p className=\"room-name\">\n                        SALA: #{(!!game) && game.code}\n                    </p>\n                    <p className=\"player-turn\">\n                        Vez de <span className={getPlayerTurnClass()}>{playerTurn}</span>\n                    </p>\n                </div>\n            </div>\n        </Background>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/user.ef8063a8.svg\";","import './styles.css';\ninterface IInputProps {\n    onChange?: (val: string) => void\n}\n\nexport default function Input({ onChange = () => {} }: IInputProps) {\n    return (\n        <input onChange={(val) => { onChange(val.target.value) }} className=\"input-name\" placeholder=\"Digite seu nick...\" type=\"text\" maxLength={20} minLength={1} />\n    )\n}\n","import './styles.css';\n\nexport default function Spinner() {\n    return (\n        <section className=\"talign-center\">\n            <div className=\"spinner icon-spinner-2\" aria-hidden=\"true\"></div>\n        </section>\n    )\n}\n","import Spinner from '../Spinner';\nimport './styles.css';\n\ninterface IButtonProps {\n    type?: 'SUCCESS' | 'PRIMARY';\n    children?: string;\n    onClick?: () => {};\n    disabled?: boolean;\n    loading?: boolean;\n}\n\nexport default function Button({ type, children, disabled, loading, onClick }: IButtonProps) {\n\n    return (\n        <button disabled={disabled || loading} onClick={onClick} className={`button-container ${(!!disabled || !!loading) && 'disabled'}`} >\n            {!!loading && (\n                <div className=\"spinner-container\">\n                    <Spinner />\n                </div>\n            )}\n            <p className=\"button-label\">{children}</p>\n        </button>\n    )\n}\n","import Axios from \"axios\";\nimport { endpoint } from \"../settings/settings\";\n\nconst axios = Axios.create();\n\naxios.interceptors.request.use(async (config) => {\n    config = {\n        ...config,\n        baseURL: endpoint,\n        timeout: 60000,\n        headers: {\n        }\n    }\n    return config;\n})\n\nconst get = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.get(`${uri}`, { params: data });\n}\n\nconst post = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.post(`${uri}`, data);\n}\n\nconst patch = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.patch(`${uri}`, data);\n}\n\nconst put = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.put(`${uri}`, data);\n}\n\nconst del = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.delete(`${uri}`, data);\n}\n\nconst api = {\n    get,\n    post,\n    patch,\n    put,\n    delete: del \n}\n\nexport default api;","import api from \"./api.service\";\n\nconst createRoom = async (): Promise<number> => {\n    return (await api.get('/api/code')).data.code;\n}\n\nconst RoomService = {\n    createRoom\n}\n\nexport default RoomService;\n\n\n\n\n","import Background from '../../components/Background';\nimport './styles.css';\nimport User from '../../assets/user.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport roomService from '../../services/room.service';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport default function Home() {\n\n    const history = useHistory();\n    const [loading, setLoading] = useState<boolean>(false);\n    const [playerName, setPlayerName] = useState<string>('')\n\n    const handleButtonClick = async () => {\n        try {\n            setLoading(true);\n            const code = await roomService.createRoom();\n            setLoading(false);\n            history.push({\n                pathname: '/jogo',\n                state: { action: 'CREATE', code, playerName }\n            });\n        } catch (e) {\n            setLoading(false);\n            console.log(e);\n        }\n    }\n\n    return (\n        <Background>\n            <div className=\"content\">\n                <img className='' src={User} alt=\"Usuário\" />\n                <Input onChange={(inputVal) => setPlayerName(inputVal)}/>\n                <Button loading={loading} onClick={handleButtonClick}>CRIAR SALA</Button>\n            </div>\n        </Background>\n    )\n}\n","import Background from '../../components/Background';\nimport './styles.css';\nimport User from '../../assets/user.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useState } from 'react';\n\ninterface IParams {\n    code: string;\n}\n\nexport default function JoinRoom() {\n\n    const history = useHistory();\n    const { code } = useParams<IParams>();\n    const [playerName, setPlayerName] = useState<string>('')\n\n    const handleButtonClick = async () => {\n        const codeNumber = parseInt(code, 10);\n        history.push({\n            pathname: '/jogo',\n            state: { action: 'JOIN', code: codeNumber, playerName }\n        });\n    }\n\n    return (\n        <Background>\n            <div className=\"content\">\n                <img src={User} alt=\"Usuário\" />\n                <p className=\"join-room-name\">\n                    SALA: #{code}\n                </p>\n                <Input onChange={(inputVal) => setPlayerName(inputVal)} />\n                <Button onClick={handleButtonClick}>ENTRAR NA SALA</Button>\n            </div>\n        </Background>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/404-not-found.e0ea9ddc.svg\";","import React from 'react'\nimport Background from '../../components/Background'\nimport NotFound from '../../assets/404-not-found.svg';\nimport './styles.css';\n\nexport default function PageNotFound() {\n    return (\n        <Background>\n            <div className=\"not-found-container\">\n                <img className='not-found-image' src={NotFound} alt=\"Usuário\" />\n                <p className=\"not-found-message\">Opa! Não conseguimos encontar essa pagina por aqui</p>\n            </div>\n        </Background>\n    )\n}\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  BrowserRouter,\n  Redirect\n} from \"react-router-dom\";\nimport Game from \"../pages/Game\";\nimport Home from \"../pages/Home\";\nimport JoinRoom from \"../pages/JoinRoom\";\nimport PageNotFound from '../pages/404';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/sala/:code\" component={JoinRoom}/>\n        <Route exact path=\"/jogo\" component={Game} />\n        <Route path=\"/404\" component={PageNotFound} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Routes from './router/Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}