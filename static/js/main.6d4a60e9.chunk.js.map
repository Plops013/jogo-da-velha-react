{"version":3,"sources":["components/Background/index.tsx","components/Board/index.tsx","settings/settings.ts","services/ws.service.ts","pages/Game/index.tsx","assets/user.svg","components/Input/index.tsx","components/Button/index.tsx","services/api.service.ts","services/room.service.ts","pages/Home/index.tsx","pages/JoinRoom/index.tsx","router/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","children","className","Board","boardState","onClickSquare","positionValue","row","column","map","boardRow","rowIndex","_value","columIndex","onClick","client","endpoint","WebSocketService","connect","console","log","wsEnpoint","replace","Stomp","Promise","res","rej","disconnect","isConnected","connected","subscribeToTopic","topic","messageCallback","subscribe","unsubscribeToTopic","unsubscribe","sendMessage","message","send","JSON","stringify","Game","useLocation","state","code","playerName","action","useState","setBoardState","undefined","playerTurn","setPlayerTurn","useEffect","a","handleRoomMessage","handleGameMessage","connectToServer","gameMessage","parse","body","turn","handleBoardUpdate","board","newBoardState","newBoardStateMapped","value","x","y","handlePlay","Input","onChange","val","target","placeholder","type","maxLength","minLength","Button","disabled","axios","Axios","create","interceptors","request","use","config","baseURL","timeout","headers","api","get","uri","data","params","post","patch","put","delete","RoomService","createRoom","Home","history","useHistory","setPlayerName","handleButtonClick","roomService","push","pathname","src","User","alt","inputVal","JoinRoom","useParams","codeNumber","parseInt","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d4a60e9.chunk.js","sourcesContent":["import { ReactElement } from 'react'\r\nimport './styles.css';\r\n\r\ninterface IBackgroundProps {\r\n    children?: ReactElement;\r\n}\r\n\r\nexport default function Background({ children }: IBackgroundProps) {\r\n    return (\r\n        <div className=\"background-container\">\r\n            <div className=\"background\" />\r\n            <h1 className=\"game-name\">Jogo da Velha</h1>\r\n            <div className=\"container\">\r\n                {children && children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './styles.css';\r\n\r\ninterface IBoardProps {\r\n    boardState?: Array<string[]>;\r\n    onClickSquare: (row: number, column: number) => void;\r\n}\r\n\r\nexport default function Board({ boardState, onClickSquare }: IBoardProps) {\r\n\r\n    const isPositionChecked = (row: number, column: number) => {\r\n        return !!boardState && !!boardState[row][column];\r\n    }\r\n\r\n    const positionValue = (row: number, column: number): string => {\r\n        return !!boardState ? boardState[row][column] : '';\r\n    }\r\n\r\n    return (\r\n        <div className='board-container'>\r\n            {\r\n                boardState?.map((boardRow, rowIndex) =>\r\n                (\r\n                    <div key={rowIndex} className=\"board-row\">\r\n                        {\r\n                            boardRow.map((_value, columIndex) =>\r\n                            (<div key={columIndex} onClick={() => onClickSquare(rowIndex, columIndex)} className=\"board-square\">\r\n                                <p className={positionValue(rowIndex, columIndex)}>{isPositionChecked(rowIndex, columIndex) && positionValue(rowIndex, columIndex)}</p>\r\n                            </div>)\r\n                            )\r\n                        }\r\n                    </div>\r\n                )\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","export const env: string = 'development';\r\nexport const endpoint: string = 'https://ffea6cf4a8ca.ngrok.io/';","import { endpoint } from \"../settings/settings\";\r\nimport Stomp from 'stompjs';\r\n\r\nlet client: Stomp.Client;\r\n\r\nconst connect = (): Promise<void> => {\r\n    console.log('::: WS CONNECTING :::');\r\n    const wsEnpoint = endpoint.replace('http', 'ws');\r\n    client = Stomp.client(`${wsEnpoint}/ws`);\r\n    return new Promise((res, rej) => {\r\n        client.connect({},\r\n            () => {\r\n                console.log('::: WS CONNECTED :::');\r\n                res();\r\n            },\r\n            () => {\r\n                console.log('::: WS CONNECTION ERROR :::');\r\n                rej();\r\n            });\r\n    })\r\n}\r\n\r\nconst disconnect = (): Promise<void> => {\r\n    return new Promise((res, rej) => {\r\n        try {\r\n            client.disconnect(res);\r\n        } catch {\r\n            rej();\r\n        }\r\n    })\r\n}\r\n\r\nconst isConnected = (): boolean => {\r\n    return client.connected;\r\n}\r\n\r\nconst subscribeToTopic = (topic: string, messageCallback: (msg: Stomp.Message) => void): void => {\r\n    console.log(`::: WS SUBSCRIBE TO TOPIC ${topic} :::`);\r\n    client.subscribe(topic, messageCallback);\r\n}\r\n\r\nconst unsubscribeToTopic = (topic: string): void => {\r\n    console.log(`::: WS UNSUBSCRIBE TO TOPIC ${topic} :::`);\r\n    client.unsubscribe(topic);\r\n}\r\n\r\nconst sendMessage = (topic: string, message: any): void => {\r\n    console.log(`::: WS SEND MESSAGE ${message} :::`);\r\n    client.send(topic, {}, JSON.stringify(message));\r\n}   \r\n\r\nconst WebSocketService = {\r\n    connect,\r\n    disconnect,\r\n    isConnected,\r\n    subscribeToTopic,\r\n    unsubscribeToTopic,\r\n    sendMessage\r\n}\r\n\r\nexport default WebSocketService;\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Background from \"../../components/Background\";\r\nimport Board from \"../../components/Board\";\r\nimport WebSocketService from \"../../services/ws.service\";\r\nimport './styles.css';\r\n\r\nexport default function Game() {\r\n\r\n    const { code, playerName, action } = (useLocation().state as any);\r\n    const [boardState, setBoardState] = useState<Array<string[]>>();\r\n    const [playerTurn, setPlayerTurn] = useState<string | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        const connectToServer = async (code: number, playerName: string) => {\r\n            await WebSocketService.connect();\r\n            WebSocketService.subscribeToTopic(`/room/${code}`, handleRoomMessage);\r\n            WebSocketService.subscribeToTopic(`/game/${code}`, handleGameMessage);\r\n            WebSocketService.sendMessage(`/app/room/${code}`, { action, playerName })\r\n        }\r\n        connectToServer(code, playerName);\r\n        return () => {\r\n            WebSocketService.sendMessage(`/app/room/${code}`, { action: 'LEAVE', playerName })\r\n            WebSocketService.disconnect();\r\n        }\r\n    }, [code, playerName])\r\n\r\n\r\n\r\n    const handleRoomMessage = (message: any) => {\r\n        console.log('Room message:', message);\r\n    }\r\n\r\n    const handleGameMessage = (message: any) => {\r\n        const gameMessage = JSON.parse(message.body);\r\n        setPlayerTurn(gameMessage.turn);\r\n        handleBoardUpdate(gameMessage.board);\r\n    }\r\n\r\n\r\n    const handleBoardUpdate = (newBoardState: Array<string[]>) => {\r\n        const newBoardStateMapped = newBoardState.map((row: string[]) => {\r\n            return row.map((value) => {\r\n                if (value === playerName) return action === 'CREATE' ? 'X' : 'O';\r\n                else if (value !== '') return action === 'CREATE' ? 'O' : 'X'\r\n                else return '';\r\n            })\r\n        })\r\n        setBoardState(newBoardStateMapped);\r\n    }\r\n\r\n    const handlePlay = (row: number, column: number) => {\r\n        WebSocketService.sendMessage(`/app/game/${code}`, { action: 'MOVE', playerName, x: row, y: column })\r\n    }\r\n\r\n    const getPlayerTurnClass = () => {\r\n        return (playerTurn === playerName) ?\r\n            (action === 'CREATE') ? 'player-x' : 'player-o' :\r\n            (action === 'CREATE') ? 'player-o' : 'player-x'\r\n    }\r\n\r\n    return (\r\n        <Background>\r\n            <div className=\"game-container\">\r\n                <Board onClickSquare={(row, column) => handlePlay(row, column)} boardState={boardState} />\r\n                <div className=\"game-info\">\r\n                    <p className=\"room-name\">\r\n                        SALA: #{code}\r\n                    </p>\r\n                    <p className=\"player-turn\">\r\n                        Vez de <span className={getPlayerTurnClass()}>{playerTurn}</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Background>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user.ef8063a8.svg\";","import './styles.css';\r\n\r\ninterface IInputProps {\r\n    onChange?: (val: string) => void\r\n}\r\n\r\nexport default function Input({ onChange = () => {} }: IInputProps) {\r\n    return (\r\n        <input onChange={(val) => { onChange(val.target.value) }} className=\"input-name\" placeholder=\"Digite seu nick...\" type=\"text\" maxLength={20} minLength={1} />\r\n    )\r\n}\r\n","import './styles.css';\r\n\r\ninterface IButtonProps {\r\n    type?: 'SUCCESS' | 'PRIMARY';\r\n    children?: string;\r\n    onClick?: () => {};\r\n    disabled?: boolean;\r\n}\r\n\r\nexport default function Button({ type, children, disabled, onClick }: IButtonProps) {\r\n\r\n    return (\r\n        <button onClick={onClick} className={`button-container ${disabled && 'disabled'}`} >\r\n            <p className=\"button-label\">{children}</p>\r\n        </button>\r\n    )\r\n}\r\n","import Axios from \"axios\";\r\nimport { endpoint } from \"../settings/settings\";\r\n\r\nconst axios = Axios.create();\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n    config = {\r\n        ...config,\r\n        baseURL: endpoint,\r\n        timeout: 60000,\r\n        headers: {\r\n        }\r\n    }\r\n    return config;\r\n})\r\n\r\nconst get = <T = any>(uri: string, data?: any): Promise<T> => {\r\n    return axios.get(`${uri}`, { params: data });\r\n}\r\n\r\nconst post = <T = any>(uri: string, data?: any): Promise<T> => {\r\n    return axios.post(`${uri}`, data);\r\n}\r\n\r\nconst patch = <T = any>(uri: string, data?: any): Promise<T> => {\r\n    return axios.patch(`${uri}`, data);\r\n}\r\n\r\nconst put = <T = any>(uri: string, data?: any): Promise<T> => {\r\n    return axios.put(`${uri}`, data);\r\n}\r\n\r\nconst del = <T = any>(uri: string, data?: any): Promise<T> => {\r\n    return axios.delete(`${uri}`, data);\r\n}\r\n\r\nconst api = {\r\n    get,\r\n    post,\r\n    patch,\r\n    put,\r\n    delete: del \r\n}\r\n\r\nexport default api;","import api from \"./api.service\";\r\n\r\nconst createRoom = async (): Promise<number> => {\r\n    return (await api.get('/api/code')).data.code;\r\n}\r\n\r\nconst RoomService = {\r\n    createRoom\r\n}\r\n\r\nexport default RoomService;\r\n\r\n\r\n\r\n\r\n","import Background from '../../components/Background';\r\nimport './styles.css';\r\nimport User from '../../assets/user.svg';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport roomService from '../../services/room.service';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n\r\n    const history = useHistory();\r\n    const [playerName, setPlayerName] = useState<string>('')\r\n\r\n    const handleButtonClick = async () => {\r\n        try {\r\n            const code = await roomService.createRoom();\r\n            history.push({\r\n                pathname: '/jogo',\r\n                state: { action: 'CREATE', code, playerName }\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Background>\r\n            <div className=\"content\">\r\n                <img src={User} alt=\"Usuário\" />\r\n                <Input onChange={(inputVal) => setPlayerName(inputVal)}/>\r\n                <Button onClick={handleButtonClick}>CRIAR SALA</Button>\r\n            </div>\r\n        </Background>\r\n    )\r\n}\r\n","import Background from '../../components/Background';\r\nimport './styles.css';\r\nimport User from '../../assets/user.svg';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\ninterface IParams {\r\n    code: string;\r\n}\r\n\r\nexport default function JoinRoom() {\r\n\r\n    const history = useHistory();\r\n    const { code } = useParams<IParams>();\r\n    const [playerName, setPlayerName] = useState<string>('')\r\n\r\n    const handleButtonClick = async () => {\r\n        const codeNumber = parseInt(code, 10);\r\n        history.push({\r\n            pathname: '/jogo',\r\n            state: { action: 'JOIN', code: codeNumber, playerName }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Background>\r\n            <div className=\"content\">\r\n                <img src={User} alt=\"Usuário\" />\r\n                <p className=\"join-room-name\">\r\n                    SALA: #{code}\r\n                </p>\r\n                <Input onChange={(inputVal) => setPlayerName(inputVal)} />\r\n                <Button onClick={handleButtonClick}>ENTRAR NA SALA</Button>\r\n            </div>\r\n        </Background>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Game from \"../pages/Game\";\r\nimport Home from \"../pages/Home\";\r\nimport JoinRoom from \"../pages/JoinRoom\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/sala/:code\">\r\n          <JoinRoom />\r\n        </Route>\r\n        <Route exact path=\"/jogo\">\r\n          <Game />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport Routes from './router/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}