{"version":3,"sources":["components/Background/index.tsx","components/Board/index.tsx","settings/settings.ts","services/ws.service.ts","pages/Game/index.tsx","assets/user.svg","components/Input/index.tsx","components/Button/index.tsx","services/api.service.ts","services/room.service.ts","pages/Home/index.tsx","pages/JoinRoom/index.tsx","router/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","children","className","Board","boardState","onClickSquare","positionValue","row","column","map","boardRow","rowIndex","_value","columIndex","onClick","client","endpoint","WebSocketService","connect","console","log","wsEnpoint","replace","Stomp","Promise","res","rej","disconnect","isConnected","connected","subscribeToTopic","topic","messageCallback","subscribe","unsubscribeToTopic","unsubscribe","sendMessage","message","send","JSON","stringify","Game","useLocation","state","code","playerName","action","useState","setBoardState","undefined","playerTurn","setPlayerTurn","useEffect","a","handleRoomMessage","handleGameMessage","connectToServer","gameMessage","parse","body","turn","handleBoardUpdate","board","newBoardState","newBoardStateMapped","value","x","y","handlePlay","Input","onChange","val","target","placeholder","type","maxLength","minLength","Button","disabled","axios","Axios","create","interceptors","request","use","config","baseURL","timeout","headers","api","get","uri","data","params","post","patch","put","delete","RoomService","createRoom","Home","history","useHistory","setPlayerName","handleButtonClick","roomService","push","pathname","src","User","alt","inputVal","JoinRoom","useParams","codeNumber","parseInt","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.820fbdd9.chunk.js","sourcesContent":["import { ReactElement } from 'react'\nimport './styles.css';\n\ninterface IBackgroundProps {\n    children?: ReactElement;\n}\n\nexport default function Background({ children }: IBackgroundProps) {\n    return (\n        <div className=\"background-container\">\n            <div className=\"background\" />\n            <h1 className=\"game-name\">Jogo da Velha</h1>\n            <div className=\"container\">\n                {children && children}\n            </div>\n        </div>\n    )\n}\n","import './styles.css';\n\ninterface IBoardProps {\n    boardState?: Array<string[]>;\n    onClickSquare: (row: number, column: number) => void;\n}\n\nexport default function     Board({ boardState, onClickSquare }: IBoardProps) {\n\n    const isPositionChecked = (row: number, column: number) => {\n        return !!boardState && !!boardState[row][column];\n    }\n\n    const positionValue = (row: number, column: number): string => {\n        return !!boardState ? boardState[row][column] : '';\n    }\n\n    return (\n        <div className='board-container'>\n            {\n                boardState?.map((boardRow, rowIndex) =>\n                (\n                    <div key={rowIndex} className=\"board-row\">\n                        {\n                            boardRow.map((_value, columIndex) =>\n                            (<div key={columIndex} onClick={() => onClickSquare(rowIndex, columIndex)} className=\"board-square\">\n                                <p className={positionValue(rowIndex, columIndex)}>{isPositionChecked(rowIndex, columIndex) && positionValue(rowIndex, columIndex)}</p>\n                            </div>)\n                            )\n                        }\n                    </div>\n                )\n                )\n            }\n        </div>\n    );\n}\n","export const env: string = 'development';\nexport const endpoint: string = 'https://ffea6cf4a8ca.ngrok.io/';","import { endpoint } from \"../settings/settings\";\nimport Stomp from 'stompjs';\n\nlet client: Stomp.Client;\n\nconst connect = (): Promise<void> => {\n    console.log('::: WS CONNECTING :::');\n    const wsEnpoint = endpoint.replace('http', 'ws');\n    client = Stomp.client(`${wsEnpoint}/ws`);\n    return new Promise((res, rej) => {\n        client.connect({},\n            () => {\n                console.log('::: WS CONNECTED :::');\n                res();\n            },\n            () => {\n                console.log('::: WS CONNECTION ERROR :::');\n                rej();\n            });\n    })\n}\n\nconst disconnect = (): Promise<void> => {\n    return new Promise((res, rej) => {\n        try {\n            client.disconnect(res);\n        } catch {\n            rej();\n        }\n    })\n}\n\nconst isConnected = (): boolean => {\n    return client.connected;\n}\n\nconst subscribeToTopic = (topic: string, messageCallback: (msg: Stomp.Message) => void): void => {\n    console.log(`::: WS SUBSCRIBE TO TOPIC ${topic} :::`);\n    client.subscribe(topic, messageCallback);\n}\n\nconst unsubscribeToTopic = (topic: string): void => {\n    console.log(`::: WS UNSUBSCRIBE TO TOPIC ${topic} :::`);\n    client.unsubscribe(topic);\n}\n\nconst sendMessage = (topic: string, message: any): void => {\n    console.log(`::: WS SEND MESSAGE ${message} :::`);\n    client.send(topic, {}, JSON.stringify(message));\n}   \n\nconst WebSocketService = {\n    connect,\n    disconnect,\n    isConnected,\n    subscribeToTopic,\n    unsubscribeToTopic,\n    sendMessage\n}\n\nexport default WebSocketService;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Background from \"../../components/Background\";\nimport Board from \"../../components/Board\";\nimport WebSocketService from \"../../services/ws.service\";\nimport './styles.css';\n\nexport default function Game() {\n\n    const { code, playerName, action } = (useLocation().state as any);\n    const [boardState, setBoardState] = useState<Array<string[]>>();\n    const [playerTurn, setPlayerTurn] = useState<string | undefined>(undefined);\n\n    useEffect(() => {\n        const connectToServer = async (code: number, playerName: string) => {\n            await WebSocketService.connect();\n            WebSocketService.subscribeToTopic(`/room/${code}`, handleRoomMessage);\n            WebSocketService.subscribeToTopic(`/game/${code}`, handleGameMessage);\n            WebSocketService.sendMessage(`/app/room/${code}`, { action, playerName })\n        }\n        connectToServer(code, playerName);\n        return () => {\n            WebSocketService.sendMessage(`/app/room/${code}`, { action: 'LEAVE', playerName })\n            WebSocketService.disconnect();\n        }\n    }, [code, playerName])\n\n\n\n    const handleRoomMessage = (message: any) => {\n        console.log('Room message:', message);\n    }\n\n    const handleGameMessage = (message: any) => {\n        const gameMessage = JSON.parse(message.body);\n        setPlayerTurn(gameMessage.turn);\n        handleBoardUpdate(gameMessage.board);\n    }\n\n\n    const handleBoardUpdate = (newBoardState: Array<string[]>) => {\n        const newBoardStateMapped = newBoardState.map((row: string[]) => {\n            return row.map((value) => {\n                if (value === playerName) return action === 'CREATE' ? 'X' : 'O';\n                else if (value !== '') return action === 'CREATE' ? 'O' : 'X'\n                else return '';\n            })\n        })\n        setBoardState(newBoardStateMapped);\n    }\n\n    const handlePlay = (row: number, column: number) => {\n        WebSocketService.sendMessage(`/app/game/${code}`, { action: 'MOVE', playerName, x: row, y: column })\n    }\n\n    const getPlayerTurnClass = () => {\n        return (playerTurn === playerName) ?\n            (action === 'CREATE') ? 'player-x' : 'player-o' :\n            (action === 'CREATE') ? 'player-o' : 'player-x'\n    }\n\n    return (\n        <Background>\n            <div className=\"game-container\">\n                <Board onClickSquare={(row, column) => handlePlay(row, column)} boardState={boardState} />\n                <div className=\"game-info\">\n                    <p className=\"room-name\">\n                        SALA: #{code}\n                    </p>\n                    <p className=\"player-turn\">\n                        Vez de <span className={getPlayerTurnClass()}>{playerTurn}</span>\n                    </p>\n                </div>\n            </div>\n        </Background>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/user.ef8063a8.svg\";","import './styles.css';\n\ninterface IInputProps {\n    onChange?: (val: string) => void\n}\n\nexport default function Input({ onChange = () => {} }: IInputProps) {\n    return (\n        <input onChange={(val) => { onChange(val.target.value) }} className=\"input-name\" placeholder=\"Digite seu nick...\" type=\"text\" maxLength={20} minLength={1} />\n    )\n}\n","import './styles.css';\n\ninterface IButtonProps {\n    type?: 'SUCCESS' | 'PRIMARY';\n    children?: string;\n    onClick?: () => {};\n    disabled?: boolean;\n}\n\nexport default function Button({ type, children, disabled, onClick }: IButtonProps) {\n\n    return (\n        <button onClick={onClick} className={`button-container ${disabled && 'disabled'}`} >\n            <p className=\"button-label\">{children}</p>\n        </button>\n    )\n}\n","import Axios from \"axios\";\nimport { endpoint } from \"../settings/settings\";\n\nconst axios = Axios.create();\n\naxios.interceptors.request.use(async (config) => {\n    config = {\n        ...config,\n        baseURL: endpoint,\n        timeout: 60000,\n        headers: {\n        }\n    }\n    return config;\n})\n\nconst get = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.get(`${uri}`, { params: data });\n}\n\nconst post = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.post(`${uri}`, data);\n}\n\nconst patch = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.patch(`${uri}`, data);\n}\n\nconst put = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.put(`${uri}`, data);\n}\n\nconst del = <T = any>(uri: string, data?: any): Promise<T> => {\n    return axios.delete(`${uri}`, data);\n}\n\nconst api = {\n    get,\n    post,\n    patch,\n    put,\n    delete: del \n}\n\nexport default api;","import api from \"./api.service\";\n\nconst createRoom = async (): Promise<number> => {\n    return (await api.get('/api/code')).data.code;\n}\n\nconst RoomService = {\n    createRoom\n}\n\nexport default RoomService;\n\n\n\n\n","import Background from '../../components/Background';\nimport './styles.css';\nimport User from '../../assets/user.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport roomService from '../../services/room.service';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport default function Home() {\n\n    const history = useHistory();\n    const [playerName, setPlayerName] = useState<string>('')\n\n    const handleButtonClick = async () => {\n        try {\n            const code = await roomService.createRoom();\n            history.push({\n                pathname: '/jogo',\n                state: { action: 'CREATE', code, playerName }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <Background>\n            <div className=\"content\">\n                <img src={User} alt=\"Usuário\" />\n                <Input onChange={(inputVal) => setPlayerName(inputVal)}/>\n                <Button onClick={handleButtonClick}>CRIAR SALA</Button>\n            </div>\n        </Background>\n    )\n}\n","import Background from '../../components/Background';\nimport './styles.css';\nimport User from '../../assets/user.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { useState } from 'react';\n\ninterface IParams {\n    code: string;\n}\n\nexport default function JoinRoom() {\n\n    const history = useHistory();\n    const { code } = useParams<IParams>();\n    const [playerName, setPlayerName] = useState<string>('')\n\n    const handleButtonClick = async () => {\n        const codeNumber = parseInt(code, 10);\n        history.push({\n            pathname: '/jogo',\n            state: { action: 'JOIN', code: codeNumber, playerName }\n        });\n    }\n\n    return (\n        <Background>\n            <div className=\"content\">\n                <img src={User} alt=\"Usuário\" />\n                <p className=\"join-room-name\">\n                    SALA: #{code}\n                </p>\n                <Input onChange={(inputVal) => setPlayerName(inputVal)} />\n                <Button onClick={handleButtonClick}>ENTRAR NA SALA</Button>\n            </div>\n        </Background>\n    );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Game from \"../pages/Game\";\nimport Home from \"../pages/Home\";\nimport JoinRoom from \"../pages/JoinRoom\";\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/sala/:code\">\n          <JoinRoom />\n        </Route>\n        <Route exact path=\"/jogo\">\n          <Game />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Routes from './router/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}